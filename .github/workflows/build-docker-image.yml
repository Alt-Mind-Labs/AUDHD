---
name: 0 üöÄ Build, Version & Push Web App Image
run-name: ‚û°Ô∏è ${{ github.ref }} (${{
  github.event_name }})

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'Dockerfile'
      - '.github/scripts/release-and-build.sh'
  workflow_dispatch:

permissions:
  contents: write     # for pushing back Git tags
  actions: write      # for upload-artifact
  deployments: write  # if you wire this up to Deployments API
  packages: write     # forgot this for oci

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME:       aijourney-webapp
      GITHUB_REPO_OWNER: ${{ github.repository_owner }}

    steps:
      - name: Checkout full history & tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set Git identity
        run: |
          git config user.email "actions@github.com"
          git config user.name  "GitHub Actions"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release, Build & Push
        env:
          GITHUB_SHA:           ${{ github.sha }}
          GITHUB_EVENT_BEFORE:  ${{ github.event.before }}
          IMAGE_NAME:           ${{ env.IMAGE_NAME }}
          GITHUB_REPO_OWNER:    ${{ env.GITHUB_REPO_OWNER }}
        run: bash ./.github/scripts/release-and-build.sh

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sudo sh -s -- -b /usr/local/bin

      - name: Scan pushed image
        run: |
          REPO_URI=ghcr.io/${{ env.GITHUB_REPO_OWNER }}/${{ env.IMAGE_NAME }}
          VERSION=$(< latest_version.txt)
          echo "üîç Scanning ${REPO_URI}:${VERSION}"
          trivy image --exit-code 1 --severity HIGH,CRITICAL \
            "${REPO_URI}:${VERSION}"

      - name: Upload latest version
        uses: actions/upload-artifact@v4
        with:
          name: webapp-latest-version
          path: latest_version.txt
